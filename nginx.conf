worker_processes auto;

events {
    worker_connections 65536;
    multi_accept on;
}

http {
    server_tokens off;

    # --- Real client IP handling (Cloudflare + Render) ---
    # Trust Cloudflare edge networks so we can accept their headers as truth
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 172.64.0.0/13;

    # Trust Render's internal proxy network (requests may traverse it)
    set_real_ip_from 10.223.0.0/16;

    # Use X-Forwarded-For to reconstruct client IP through trusted proxies
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    # Prefer Cloudflare-provided client IP headers when they exist,
    # otherwise fall back to the resolved real IP from the proxy chain.
    map $http_true_client_ip $tci_or_real {
        ""      $realip_remote_addr;
        default $http_true_client_ip;
    }
    map $http_cf_connecting_ip $client_ip {
        ""      $tci_or_real;
        default $http_cf_connecting_ip;
    }

    # Debug format to help validate IP forwarding behavior
    log_format debug_ips 'remote_addr=$remote_addr realip_remote_addr=$realip_remote_addr client_ip=$client_ip cf_connecting_ip=$http_cf_connecting_ip x_forwarded_for="$http_x_forwarded_for" x_real_ip=$http_x_real_ip';

    server {
        listen 80 default_server backlog=16384;
        listen [::]:80 default_server backlog=16384;

        # Enable debug logging to stdout
        access_log /dev/stdout debug_ips;

        # Common proxy headers applied to all locations
        proxy_set_header X-Real-IP $client_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Mixpanel JS libraries
        location = /lib.min.js {
            proxy_pass https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js;
        }
        location = /lib.js {
            proxy_pass https://cdn.mxpnl.com/libs/mixpanel-2-latest.js;
        }

        # Decide endpoint
        location = /decide {
            proxy_set_header Host decide.mixpanel.com;
            proxy_pass https://decide.mixpanel.com/decide;
        }

        # Catch-all forwards to Mixpanel's main API
        location / {
            proxy_set_header Host api.mixpanel.com;

            # Extra debug headers for troubleshooting IP forwarding/geolocation
            proxy_set_header X-Debug-RemoteAddr $remote_addr;
            proxy_set_header X-Debug-RealIP $realip_remote_addr;
            proxy_set_header X-Debug-ClientIP $client_ip;
            proxy_set_header X-Debug-CFConnectingIP $http_cf_connecting_ip;
            proxy_set_header X-Debug-XForwardedFor $http_x_forwarded_for;
            proxy_set_header X-Debug-XRealIP $http_x_real_ip;
            proxy_set_header X-Debug-UserAgent $http_user_agent;
            proxy_set_header X-Debug-Referer $http_referer;
            proxy_set_header X-Debug-TrueClientIP $http_true_client_ip;

            proxy_pass https://api.mixpanel.com/;
        }
    }
}
